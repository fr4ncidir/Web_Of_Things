#      _                 _     _                           _                   _   
#     (_)___  ___  _ __ | | __| |       ___ ___  _ __  ___| |_ _ __ _   _  ___| |_ 
#     | / __|/ _ \| '_ \| |/ _` |_____ / __/ _ \| '_ \/ __| __| '__| | | |/ __| __|
#     | \__ \ (_) | | | | | (_| |_____| (_| (_) | | | \__ \ |_| |  | |_| | (__| |_ 
#    _/ |___/\___/|_| |_|_|\__,_|      \___\___/|_| |_|___/\__|_|   \__,_|\___|\__|
#   |__/ 

JSONLD_CONSTRUCT:
    sparql: "
        construct {
            ?thing  rdf:type wot:Thing;
                wot:hasThingDescription ?td;
                wot:hasName ?tName.
            ?thing wot:hasSubThing ?subThing.
            ?td wot:hasInteractionPattern ?ip.
            ?ip rdf:type ?ip_type;
                wot:hasName ?ipatternName.
            ?ip wot:hasInputDataSchema ?iDS.
            ?iDS wot:hasFieldSchema ?iFS.
            ?iFS rdf:type ?iFS_type.
            ?ip wot:hasOutputDataSchema ?oDS.
            ?oDS wot:hasFieldSchema ?oFS.
            ?oFS rdf:type ?oFS_type.
            ?ip wot:hasStability ?pStability;
                wot:isWritable ?pWritability;
                wot:hasPropertyDataSchema ?pDS;
                wot:hasPropertyData ?smtg.
            ?smtg dul:hasDataValue ?pValue.
            ?pDS wot:hasFieldSchema ?pFS.
            ?ip wot:forProperty ?pTarget }
        where {
            ?thing  rdf:type wot:Thing;
                wot:hasThingDescription ?td;
                wot:hasName ?tName.
            optional {?thing wot:hasSubThing ?subThing}.
            ?td wot:hasInteractionPattern ?ip.
            ?ip rdf:type ?ip_type;
                wot:hasName ?ipatternName.
            optional {
                ?ip wot:hasInputDataSchema ?iDS.
                ?iDS wot:hasFieldSchema ?iFS.
                ?iFS rdf:type ?iFS_type. }
            optional {
                ?ip wot:hasOutputDataSchema ?oDS.
                ?oDS wot:hasFieldSchema ?oFS.
                ?oFS rdf:type ?oFS_type. }
            optional {
                ?ip wot:hasStability ?pStability;
                    wot:isWritable ?pWritability;
                    wot:hasPropertyDataSchema ?pDS;
                    wot:hasPropertyData ?smtg.
                ?smtg dul:hasDataValue ?pValue.
                ?pDS wot:hasFieldSchema ?pFS.
                ?pFS rdf:type ?pFS_type.}
            optional{?ip wot:forProperty ?pTarget}
        }"
    forcedBindings:
        thing:
            type: uri
            value: ""
